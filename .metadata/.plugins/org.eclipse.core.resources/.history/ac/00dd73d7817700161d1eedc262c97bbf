package day_4;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.util.Scanner;

public class T9Spelling {
	public static final String TWO = "abc";
	public static final String THREE = "def";
	public static final String FOUR = "ghi";
	public static final String FIVE = "jkl";
	public static final String SIX = "mno";
	public static final String SEVEN = "pqrs";
	public static final String EIGHT = "tuv";
	public static final String NINE = "wxyz";

	public static void main(String[] args) throws FileNotFoundException {
		System.setIn(new FileInputStream("D:\\input_t9_spelling.txt"));
		Scanner scanner = new Scanner(System.in);
		int numOfTestCase = Integer.parseInt(scanner.nextLine());
		if (numOfTestCase >= 1 && numOfTestCase <= 100) {
			for (int i = 0; i < numOfTestCase; i++) {
				char[] in = scanner.nextLine().toCharArray();
				if (in.length <= 1000) {
					String out = "";
					for (int j = 0; j < in.length; j++) {
						String s = getSeqNumberPressed(in[j]);
						if (out.endsWith(s.charAt(0) + "")) {
							out += " ";
						}
						out += s;
					}
					System.out.println("Case #" + (i + 1) + ": " + out);
				}
			}
		}
		scanner.close();
	}

	// Kiểm tra kí tự thuộc số nào và trả về chuỗi tương ứng
	public static String getSeqNumberPressed(char c) {
		if (TWO.contains(c + "")) {
			return getSeq(2 + "", TWO.indexOf(c));
		} else if (THREE.contains(c + "")) {
			return getSeq(3 + "", THREE.indexOf(c));
		} else if (FOUR.contains(c + "")) {
			return getSeq(4 + "", FOUR.indexOf(c));
		} else if (FIVE.contains(c + "")) {
			return getSeq(5 + "", FIVE.indexOf(c));
		} else if (SIX.contains(c + "")) {
			return getSeq(6 + "", SIX.indexOf(c));
		} else if (SEVEN.contains(c + "")) {
			return getSeq(7 + "", SEVEN.indexOf(c));
		} else if (EIGHT.contains(c + "")) {
			return getSeq(8 + "", EIGHT.indexOf(c));
		} else if (NINE.contains(c + "")) {
			return getSeq(9 + "", NINE.indexOf(c));
		} else {
			return "0";
		}
	}

	// Trả về chuỗi kí tự number ứng với vị trí position trên bàn phím điện thoại
	// Ví dụ: kí tự b thì trả về 22
	private static String getSeq(String number, int position) {
		String out = "";
		while (position >= 0) {
			out += number;
			position--;
		}
		return out;
	}
}
