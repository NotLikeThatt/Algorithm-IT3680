package daysofcode;

public class Primality {

	/**
	 * Worst: O(n) algorithm
	 */
	static boolean isPrimeWorst(int n) {
		if (n < 2) {
			return false;
		}
		// false neu n chan
		if (n != 2 && n % 2 == 0) {
			return false;
		}
		// false neu n co the chia het cho i tu 3-n
		for (int i = 3; i < n; i++) {
			if (n % i == 0) {
				return false;
			}
		}
		return true;
	}

	/**
	 * Best: O( n^(1/2) ) Algorithm
	 */
	static boolean isPrime(int n) {
		if (n < 2) {
			return false;
		}
		if (n != 2 && n % 2 == 0) {
			return false;
		}
		for (int i = 3; i * i <= n; i += 2) {
			if (n % i == 0) {
				return false;
			}
		}
		return true;
	}
}
